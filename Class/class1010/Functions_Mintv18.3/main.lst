     1                                  ;
     2                                  ;This program will test out the functions library
     3                                  ;
     4                                  ;
     5                                  ;Include our external functions library functions
     6                                  
     7                                  bits 32
     8                                  extern printf ;bring up the printf function
     9                                  extern scanf ; bring up scanf option to get user input
    10                                   
    11                                  SECTION .data
    12 00000000 57656C636F6D652074-     	welcomeAct	db	"Welcome to my Program", 0dh, 0ah, 0h	;Prompt String
    12 00000009 6F206D792050726F67-
    12 00000012 72616D0D0A00       
    13 00000018 48617665206120676F-     	byeAct		db	"Have a good day", 0dh, 0ah, 0h
    13 00000021 6F64206461790D0A00 
    14                                  	
    15 0000002A 0A0D54686520696E65-     	intFormatString	db	0ah, 0dh, "The ineteger value is: %d", 0ah, 0dh, 0h
    15 00000033 74656765722076616C-
    15 0000003C 75652069733A202564-
    15 00000045 0A0D00             
    16 00000048 0A000000                	intToPrint	dd	10
    17                                  
    18 0000004C 54686520666C6F6174-     	floatFormatString	db	"The float value is: %5.4f" , 0ah, 0dh, 0h ;5 digits overall, 4 decimal 
    18 00000055 2076616C7565206973-
    18 0000005E 3A2025352E34660A0D-
    18 00000067 00                 
    19 00000068 D18B6642                	floatToPrint	dd	57.636541
    20                                  	
    21 0000006C 257300                  	inputFormatString 	db	"%s", 0
    22 0000006F 257500                  	intInputFormatString db "%u", 0
    23                                  	
    24 00000072 706C6561736520696E-     	putInt db "please insert an integer", 0ah, 0dh, 0h
    24 0000007B 7365727420616E2069-
    24 00000084 6E74656765720A0D00 
    25 0000008D 0A0D5072696E74696E-     	printInt db 0ah, 0dh, "Printing that integer: ",  0h
    25 00000096 67207468617420696E-
    25 0000009F 74656765723A2000   
    26                                  	
    27 000000A7 200A0D00                	pushLine db " ", 0ah, 0dh, 0h
    28                                  	
    29                                  SECTION .bss
    30                                  	;reserve bytes here
    31 00000000 <res 00000030>          	userInput	resb	30h;reserve 30bytes for user input
    32 00000030 <res 00000004>          	intInput	resd	1 ;reserve 4 byte (1 double word) for user int input
    33                                  SECTION     .text
    34                                  	global      main
    35                                       
    36                                  main:
    37                                  	;---------SCANNING ----
    38 00000000 68[00000000]            	push welcomeAct
    39 00000005 E8(00000000)            	call printf
    40 0000000A 83C404                  	add esp, 4 ;= pop eax
    41                                  	
    42 0000000D 68[00000000]            	push userInput ;Put the user input buffer into the stack
    43 00000012 68[6C000000]            	push inputFormatString
    44 00000017 E8(00000000)            	call scanf
    45 0000001C 83C408                  	add esp, 8 ;clean up the stack
    46                                  	
    47                                  	;print space:
    48                                  ;
    49                                  	
    50 0000001F 68[00000000]            	push userInput ;print the contents of what the user input
    51 00000024 E8(00000000)            	call printf
    52 00000029 83C404                  	add esp, 4
    53                                  
    54 0000002C 68[A7000000]            	push pushLine ;print the contents of what the user input
    55 00000031 E8(00000000)            	call printf
    56 00000036 83C404                  	add esp, 4
    57                                  
    58                                      ;-----PRINTING INTS AND FLOATS ----
    59                                      ;print our integer using C Routine
    60 00000039 FF35[48000000]              push DWORD [intToPrint]
    61 0000003F 68[2A000000]                push intFormatString
    62 00000044 E8(00000000)                call printf
    63 00000049 58                          pop eax
    64 0000004A 58                          pop eax
    65 0000004B 83C408                      add esp, 8 ;alternative for doing 2 pops
    66                                      
    67                                      ; DO NOT remove or change the lines below here.
    68                                      ; THese exist out of the application and back to linux in an orderly fashion
    69                                      ; THese exist out of the application and back to linux in an orderly fashion
    70                                      
    71                                      ;Print our floating point using C Routine
    72 0000004E 9BDBE3                      finit
    73 00000051 B8[68000000]            	mov eax, floatToPrint ;put our float into eax
    74 00000056 D900                    	fld  DWORD [eax]
    75 00000058 DD1C24                  	fstp QWORD [esp]
    76 0000005B 68[4C000000]            	push floatFormatString
    77 00000060 E8(00000000)            	call printf
    78 00000065 83C40C                  	add esp, 12
    79                                  	;pop eax ;next three lines is the alternative to adding to esp
    80                                  	;pop eax
    81                                  	;pop eax
    82                                  	
    83                                  	
    84                                  	;-----SCANNING AN INTEGER---- then printing it
    85 00000068 68[A7000000]            	push pushLine
    86 0000006D E8(00000000)            	call printf
    87 00000072 83C404                  	add esp, 4 ;pop eax
    88                                  	
    89 00000075 68[72000000]            	push putInt
    90 0000007A E8(00000000)            	call printf
    91 0000007F 83C404                  	add esp, 4
    92                                  	
    93 00000082 68[30000000]            	push intInput
    94 00000087 68[6F000000]            	push intInputFormatString
    95 0000008C E8(00000000)            	call scanf ;get user input
    96 00000091 83C408                  	add esp, 8 ;clear the stack, pop eax times 2
    97                                  	
    98 00000094 68[8D000000]            	push printInt
    99 00000099 E8(00000000)            	call printf
   100 0000009E 83C404                  	add esp, 4
   101                                  	
   102 000000A1 FF35[30000000]          	push DWORD [intInput]
   103 000000A7 68[2A000000]            	push intFormatString
   104 000000AC E8(00000000)            	call printf
   105 000000B1 83C408                  	add esp, 8 ;clean up the stack
   106                                  	
   107 000000B4 68[A7000000]            	push pushLine
   108 000000B9 E8(00000000)            	call printf
   109 000000BE 83C404                  	add esp, 4
   110                                  ;
   111                                  ;Setup the registers for exit and poke the kernel
   112                                  ;Exit: 
   113 000000C1 B801000000              	mov		eax,1				;What are we going to do? Exit!
   114 000000C6 BB00000000              	mov		ebx,0						;Return code
   115 000000CB CD80                    	int		80h							;Poke the kernel
