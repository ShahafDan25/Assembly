     1                                  ; Assembler 32bit template
     2                                  
     3                                  bits 32
     4                                  section .data
     5                                  ;variables with values go here
     6                                  	
     7 00000000 000000000000F03F        	floatVar1	dq	1.0
     8 00000008 0000000000000040        	floatVar2	dq	2.0
     9 00000010 DBF97E6ABC206C40        	floatVar3	dq	225.023
    10                                  	
    11                                  	
    12                                  section .bss
    13                                  ;reserved memory goes here
    14 00000000 <res 00000008>          	floatStore	resq 1
    15                                  	
    16                                  
    17                                  section .text
    18                                  ;Your program code goes here
    19                                  
    20                                  	global _start
    21                                  _start:
    22 00000000 90                          nop
    23                                  	
    24                                  	;========== CODE ===========
    25                                  	
    26                                  	;floatVar1 + (floatVar2 * floatVar3)
    27                                  	
    28 00000001 DD05[08000000]          	fld	qword [floatVar2]						;push 2,0 onto the stack
    29 00000007 DD05[10000000]          	fld qword [floatVar3]						;push 225.023 onto the stack
    30 0000000D DEC9                    	fmul										;floatVar2 * floatVar3
    31 0000000F DD05[00000000]          	fld qword [floatVar1]						;push 1.0 onto the stack
    32 00000015 DEC1                    	fadd										;floatVar1 + (floatVar2 * floatVar3)
    33                                  	
    34 00000017 DD1D[00000000]          	fstp qword [floatStore]						;store the result in the reserved variable
    35                                  	
    36 0000001D DD05[10000000]          	fld qword [floatVar3]						;push 225.023
    37 00000023 D9FA                    	fsqrt										;sqaure root it
    38 00000025 D9C1                    	fld											;fld would take (ST(0)) and push it again to the FLU Stack
    39                                  	
    40                                  	
    41                                  	
    42 00000027 90                      	nop
    43                                  	
    44                                  	;Do not remove/change the lines below here.
    45                                  	;These exit out of the application and back
    46                                  	;to linux in an orderly fashion
    47 00000028 90                      	nop
    48 00000029 B801000000              	mov eax,1      ; Exit system call value
    49 0000002E BB00000000              	mov ebx,0      ; Exit return code
    50 00000033 CD80                    	int 80h        ; Call the kernel
