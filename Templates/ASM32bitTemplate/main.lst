     1                                  ; Assembler 32bit template
     2                                  
     3                                  bits 32
     4                                  section .data
     5                                  ;variables with values go here
     6                                  	
     7 00000000 12                      	byteVariable db 12h 				;byte = 8bites or 2 nibles
     8 00000001 5634                    	wordVariable dw 3456h 				;Wrod = 16bits or 4 nibbles	
     9 00000003 34129078                	dwordVariable dd 78901234h 			;Double Word = 32 bits or 8 nibbles
    10 00000007 7856341278563412        	qwordVariable dq 1234567812345678h 	;Quad word = 64 bit or 16 nibbles
    11 0000000F 66E6F642                	fwordVariable dd 123.45				;Double Word floating point of 32 bits
    12 00000013 CDCCCCCCCCDC5E40        	fqwordVariable dq 123.45			;Quad Word floating point of 64bits
    13                                  	
    14                                  	
    15                                  section .bss
    16                                  ;reserved memory goes here
    17                                  section .text
    18                                  ;Your program code goes here
    19                                  
    20                                  	global _start
    21                                  _start:
    22 00000000 90                          nop
    23                                  	
    24                                  	;Your program code should go here
    25 00000001 B8FFFFFFFF              	mov eax, 0ffffffffh
    26 00000006 66B82222                	mov ax, 2222h
    27 0000000A B033                    	mov al, 33h
    28 0000000C B444                    	mov ah, 44h
    29                                  	
    30                                  	;Do not remove/change the lines below here.
    31                                  	;These exit out of the application and back
    32                                  	;to linux in an orderly fashion
    33 0000000E 90                      	nop
    34 0000000F B801000000              	mov eax,1      ; Exit system call value
    35 00000014 BB00000000              	mov ebx,0      ; Exit return code
    36 00000019 CD80                    	int 80h        ; Call the kernel
